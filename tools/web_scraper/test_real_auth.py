#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ practicatest.com

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç:
1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
2. –û–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import sys
import logging
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, str(Path(__file__).parent.parent.parent / "src"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

from practicatest_auth import PracticaTestAuth


def test_real_credentials():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ .env"""
    print("üîê –¢–µ—Å—Ç 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥—ë—Ç .env –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ)
    auth = PracticaTestAuth()
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
        print("\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        config = auth.config
        print(f"  Email: {config.get('PRACTICATEST_EMAIL', '–ù–ï –£–ö–ê–ó–ê–ù')}")
        print(f"  –ü–∞—Ä–æ–ª—å: {'*' * len(str(config.get('PRACTICATEST_PASSWORD', ''))) if config.get('PRACTICATEST_PASSWORD') else '–ù–ï –£–ö–ê–ó–ê–ù'}")
        print(f"  –ë–∞–∑–æ–≤—ã–π URL: {config.get('PRACTICATEST_BASE_URL')}")
        print(f"  URL –≤—Ö–æ–¥–∞: {config.get('PRACTICATEST_LOGIN_URL')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ö–æ–¥–∞
        if not config.get('PRACTICATEST_EMAIL') or not config.get('PRACTICATEST_PASSWORD'):
            print("\n‚ùå –û—à–∏–±–∫–∞: Email –∏–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç:")
            print("   PRACTICATEST_EMAIL=–≤–∞—à_email@example.com")
            print("   PRACTICATEST_PASSWORD=–≤–∞—à_–ø–∞—Ä–æ–ª—å")
            return False
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
        print("\nüöÄ –í—ã–ø–æ–ª–Ω—è—é –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É...")
        if auth.login():
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Å—Å–∏–∏
            print("\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏:")
            status = auth.get_session_info()
            for key, value in status.items():
                if key == 'login_time':
                    print(f"  {key}: {value}")
                elif key == 'session_age':
                    print(f"  {key}: {value:.1f} —Å–µ–∫—É–Ω–¥")
                else:
                    print(f"  {key}: {value}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
            print(f"\nüîê –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏: {auth.is_session_valid()}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â—ë–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            print("\nüåê –¢–µ—Å—Ç–∏—Ä—É—é –¥–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –±–∏–ª–µ—Ç–∞–º–∏...")
            try:
                import requests
                response = auth.session.get(config.get('PRACTICATEST_TESTS_URL'), timeout=10)
                print(f"  –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
                if response.status_code == 200:
                    print("  ‚úÖ –î–æ—Å—Ç—É–ø –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –±–∏–ª–µ—Ç–∞–º–∏ –ø–æ–ª—É—á–µ–Ω")
                else:
                    print(f"  ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {e}")
            
            return True
            
        else:
            print("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
            print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("  - –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å")
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é")
            print("  - –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ")
            print("  - –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–∞–ø—á–∞ –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è")
            return False
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        auth.close()
        print("\nüîí –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞")


def test_wrong_credentials():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("\n\n‚ùå –¢–µ—Å—Ç 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    auth = PracticaTestAuth()
    
    try:
        # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
        original_email = auth.config.get('PRACTICATEST_EMAIL')
        original_password = auth.config.get('PRACTICATEST_PASSWORD')
        
        auth.config['PRACTICATEST_EMAIL'] = 'wrong@email.com'
        auth.config['PRACTICATEST_PASSWORD'] = 'wrongpassword123'
        
        print("\nüìã –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ):")
        print(f"  Email: {auth.config['PRACTICATEST_EMAIL']}")
        print(f"  –ü–∞—Ä–æ–ª—å: {auth.config['PRACTICATEST_PASSWORD']}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        print("\nüöÄ –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
        if auth.login():
            print("‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –≤—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
            print("üí° –≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å, —á—Ç–æ —Å–∞–π—Ç –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –ª–æ–≥–∏–∫–∞")
        else:
            print("‚úÖ –û–∂–∏–¥–∞–µ–º–æ: –≤—Ö–æ–¥ –Ω–µ —É–¥–∞–ª—Å—è —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
            print("üí° –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        auth.config['PRACTICATEST_EMAIL'] = original_email
        auth.config['PRACTICATEST_PASSWORD'] = original_password
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        auth.close()
        print("\nüîí –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ practicatest.com")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
    project_root = Path(__file__).parent.parent.parent
    env_file = project_root / ".env"
    
    if not env_file.exists():
        print("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—Ö–æ–¥–∞:")
        print("   PRACTICATEST_EMAIL=–≤–∞—à_email@example.com")
        print("   PRACTICATEST_PASSWORD=–≤–∞—à_–ø–∞—Ä–æ–ª—å")
        return
    
    print(f"‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω: {env_file.absolute()}")
    
    # –¢–µ—Å—Ç 1: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n" + "="*60)
    success_real = test_real_credentials()
    
    # –¢–µ—Å—Ç 2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\n" + "="*60)
    success_wrong = test_wrong_credentials()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "="*60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"  –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {'‚úÖ –£–°–ü–ï–•' if success_real else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
    print(f"  –¢–µ—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {'‚úÖ –£–°–ü–ï–•' if success_wrong else '‚ùå –ù–ï–£–î–ê–ß–ê'}")
    
    if success_real and success_wrong:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
    
    print("\nüîö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


if __name__ == "__main__":
    main()
